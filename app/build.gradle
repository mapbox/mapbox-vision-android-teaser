apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

apply from: 'generate-token.gradle'

def envVarOrLocalProperty(String name) {
    if (System.getenv(name) != null) {
        return System.getenv(name)
    }

    Properties properties = new Properties()
    def file = project.rootProject.file('local.properties')
    if (file.exists()) {
        properties.load(file.newDataInputStream())
        def localProperty = properties.getProperty(name)
        if (localProperty != null) {
            return localProperty
        }
    }
    return null
}

if (file("${rootDir}/gradle/versions.gradle").exists()) {
    apply from: "${rootDir}/gradle/versions.gradle"
}

android {
    buildToolsVersion build_tools_version
    compileSdkVersion compile_sdk_version

    defaultConfig {
        applicationId "com.mapbox.vision.examples"
        minSdkVersion min_sdk_version
        targetSdkVersion target_sdk_version
        versionCode 3
        versionName "0.1.1"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }

    signingConfigs {
        release {
            storeFile file(envVarOrLocalProperty('SIGNING_CONFIG_RELEASE'))
            storePassword envVarOrLocalProperty('SIGNING_CONFIG_RELEASE_PASSWORD')
            keyAlias envVarOrLocalProperty('SIGNING_CONFIG_RELEASE_ALIAS')
            keyPassword envVarOrLocalProperty('SIGNING_CONFIG_RELEASE_KEY_PASSWORD')
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            signingConfig signingConfigs.release
        }
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation "com.android.support:appcompat-v7:$support_lib"
    implementation "com.android.support.constraint:constraint-layout:1.1.3"

    implementation 'com.android.support:multidex:1.0.3'

    implementation "com.mapbox.mapboxsdk:mapbox-android-sdk:$mapbox_sdk"
    implementation "com.mapbox.mapboxsdk:mapbox-android-navigation:$mapbox_navigation"
    implementation "com.mapbox.mapboxsdk:mapbox-android-navigation-ui:$mapbox_navigation"
    implementation "com.mapbox.mapboxsdk:mapbox-android-plugin-locationlayer:$mapbox_location_layer"
    implementation "com.mapbox.mapboxsdk:mapbox-android-core:$mapbox_core"

    if (envVarOrLocalProperty('BUILD_CORE_FROM_SOURCE') != null) {
        implementation project(path: ':MapboxVision')
        implementation project(path: ':MapboxVisionAndroidAR')
    } else {
        implementation "com.mapbox.vision:mapbox-android-vision:$vision_core"
        implementation "com.mapbox.vision:mapbox-android-vision-ar:$vision_core"
    }

    implementation('com.crashlytics.sdk.android:crashlytics:2.9.5@aar') {
        transitive = true;
    }

    testImplementation 'junit:junit:4.12'

    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}