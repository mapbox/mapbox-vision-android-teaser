apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

apply from: '../gradle/generate-token.gradle'
apply from: "../gradle/ktlint.gradle"

if (gradle.ext.has('BUILD_CORE_FROM_SOURCE')) {
    apply plugin: 'com.google.gms.google-services'
    apply plugin: 'com.google.firebase.crashlytics'
    apply plugin: 'com.google.firebase.firebase-perf'
}

android {
    buildToolsVersion build_tools_version
    compileSdkVersion compile_sdk_version

    defaultConfig {
        applicationId "com.mapbox.vision.teaser"
        minSdkVersion min_sdk_version
        targetSdkVersion target_sdk_version
        versionCode teaser_version_code
        versionName teaser_version_name
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    splits {
        abi {
            enable true
            reset()
            include "arm64-v8a"
            universalApk false
        }
    }

    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }

    signingConfigs {
        if (gradle.ext.has('SIGNING_CONFIG_RELEASE')) {
            release {
                storeFile file(gradle.ext.SIGNING_CONFIG_RELEASE)
                storePassword gradle.ext.SIGNING_CONFIG_RELEASE_PASSWORD
                keyAlias gradle.ext.SIGNING_CONFIG_RELEASE_ALIAS
                keyPassword gradle.ext.SIGNING_CONFIG_RELEASE_KEY_PASSWORD
            }
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            manifestPlaceholders = [appName: "Debug Vision Teaser"]

            if (gradle.ext.has('BUILD_CORE_FROM_SOURCE')) {
                firebaseCrashlytics {
                    nativeSymbolUploadEnabled true
                    strippedNativeLibsDir 'build/intermediates/stripped_native_libs/debug/out/lib/'
                    unstrippedNativeLibsDir '../source/mapbox-vision/SDK/Platforms/Android/build/unstripped/debug'
                }
            }
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            if (gradle.ext.has('SIGNING_CONFIG_RELEASE')) {
                signingConfig signingConfigs.release
            }

            manifestPlaceholders = [appName: "Vision Teaser"]

            if (gradle.ext.has('BUILD_CORE_FROM_SOURCE')) {
                firebaseCrashlytics {
                    nativeSymbolUploadEnabled true
                    strippedNativeLibsDir 'build/intermediates/stripped_native_libs/release/out/lib/'
                    unstrippedNativeLibsDir '../source/mapbox-vision/SDK/Platforms/Android/build/unstripped/release'
                }
            }
        }
    }

    dexOptions {
        preDexLibraries true
        maxProcessCount 8
        javaMaxHeapSize "2g"
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    sourceSets{
        main.java.srcDirs += 'src/main/kotlin/'
    }
}

dependencies {

    api "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    api "androidx.appcompat:appcompat:$android_x_appcompat"
    api "androidx.constraintlayout:constraintlayout:$android_x_constraint_layout"
    api "androidx.core:core-ktx:$android_x_ktx"
    api "androidx.multidex:multidex:$android_x_multidex"
    api "androidx.swiperefreshlayout:swiperefreshlayout:$android_x_swipe_refresh"

    if (gradle.ext.has('BUILD_CORE_FROM_SOURCE') && gradle.ext.BUILD_CORE_FROM_SOURCE.toBoolean()) {
        api project(path: ':mapbox-android-vision')
        api project(path: ':mapbox-android-vision-ar')
        api project(path: ':mapbox-android-vision-safety')
    } else {
        api "com.mapbox.vision:mapbox-android-vision:$vision"
        api "com.mapbox.vision:mapbox-android-vision-ar:$vision"
        api "com.mapbox.vision:mapbox-android-vision-safety:$vision"
    }

    api platform("com.google.firebase:firebase-bom:$google_firebase_bom_version")

    api "com.google.firebase:firebase-perf-ktx"
    api "com.google.firebase:firebase-analytics-ktx"
    api "com.google.firebase:firebase-crashlytics-ndk"

    implementation("com.mapbox.mapboxsdk:mapbox-android-sdk:$mapbox_maps") {
        exclude group: 'com.mapbox.mapboxsdk', module: 'mapbox-android-telemetry-okhttp3'
    }
    api "com.mapbox.navigation:ui:$mapbox_navigation"

    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leak_canary"

    ktlint "com.pinterest:ktlint:$ktlint_version"
}
